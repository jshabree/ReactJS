{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\juver\\\\codingStuff\\\\reactJS\\\\redux-sample\\\\src\\\\App.js\";\nimport React from 'react'; // import { Formik, Form, Field, ErrorMessage } from \"formik\";\n\nimport \"./App.css\";\nimport logo from \"./logo.svg\";\nimport { Form, Input, Button } from \"antd\"; // import { Tooltip, Select, Checkbox } from \"antd\";\n// import Icon from '@ant-design/icons';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  } //   onTextChange = (e) => {\n  //     const name = e.target.name;\n  //     const value = e.target.value;\n  //     this.setState((prevState, prevProps) => {\n  //       return {[name] : value}\n  //     })\n  //   }\n  //   onSubmit = e => {\n  //     e.preventDefault();\n  //     console.log(\"username : \"+this.state.username);\n  //     console.log(\"password : \"+this.state.password);\n  //   };\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\",\n          password: \"\"\n        },\n        validate: values => {\n          const errors = {};\n\n          if (!values.email) {\n            errors.email = \"Required\";\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = \"Invalid email address\";\n          }\n\n          return errors;\n        },\n        onSubmit: (values, {\n          setSubmitting\n        }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null));\n            setSubmitting(false);\n          }, 400);\n        },\n        children: ({\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            type: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App; //         <Form className = \"form-inside-input\" onSubmit = {this.onSubmit} noValidate>\n//         <Input name = \"username\" value = {this.state.username} onChange = {this.onTextChange} placeholder=\"Enter your username\" required/>\n//         <Input.Password name = \"password\" value={this.state.password}  onChange = {this.onTextChange} placeholder=\"Enter your password\" required />\n//         <Button type=\"primary\" onClick={this.onSubmit}>Submit</Button>\n//         </Form>","map":{"version":3,"sources":["C:/Users/juver/codingStuff/reactJS/redux-sample/src/App.js"],"names":["React","Form","Input","Button","App","Component","constructor","props","state","username","password","render","email","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,WAAP;;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC,C,CACA;AACA;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID,GAP+B,CAShC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,aAAa,EAAE;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaF,UAAAA,QAAQ,EAAE;AAAvB,SADjB;AAEE,QAAA,QAAQ,EAAGG,MAAD,IAAY;AACpB,gBAAMC,MAAM,GAAG,EAAf;;AACA,cAAI,CAACD,MAAM,CAACD,KAAZ,EAAmB;AACjBE,YAAAA,MAAM,CAACF,KAAP,GAAe,UAAf;AACD,WAFD,MAEO,IACL,CAAC,2CAA2CG,IAA3C,CAAgDF,MAAM,CAACD,KAAvD,CADI,EAEL;AACAE,YAAAA,MAAM,CAACF,KAAP,GAAe,uBAAf;AACD;;AACD,iBAAOE,MAAP;AACD,SAZH;AAaE,QAAA,QAAQ,EAAE,CAACD,MAAD,EAAS;AAAEG,UAAAA;AAAF,SAAT,KAA+B;AACvCC,UAAAA,UAAU,CAAC,MAAM;AACfC,YAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeP,MAAf,EAAuB,IAAvB,CAAD,CAAL;AACAG,YAAAA,aAAa,CAAC,KAAD,CAAb;AACD,WAHS,EAGP,GAHO,CAAV;AAID,SAlBH;AAAA,kBAoBG,CAAC;AAAEK,UAAAA;AAAF,SAAD,kBACC,QAAC,IAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,OAAnB;AAA2B,YAAA,SAAS,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,UAAnB;AAA8B,YAAA,SAAS,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,QAAQ,EAAEA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AArBJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAoCD;;AA5D+B;;AA+DlC,eAAejB,GAAf,C,CAEA;AAEA;AAEA;AAEA;AAEA","sourcesContent":["import React from 'react';\r\n// import { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport \"./App.css\";\r\nimport logo from './logo.svg';\r\nimport { Form, Input, Button } from \"antd\";\r\n// import { Tooltip, Select, Checkbox } from \"antd\";\r\n// import Icon from '@ant-design/icons';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  //   onTextChange = (e) => {\r\n  //     const name = e.target.name;\r\n  //     const value = e.target.value;\r\n  //     this.setState((prevState, prevProps) => {\r\n  //       return {[name] : value}\r\n  //     })\r\n  //   }\r\n\r\n  //   onSubmit = e => {\r\n  //     e.preventDefault();\r\n  //     console.log(\"username : \"+this.state.username);\r\n  //     console.log(\"password : \"+this.state.password);\r\n  //   };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Formik\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          validate={(values) => {\r\n            const errors = {};\r\n            if (!values.email) {\r\n              errors.email = \"Required\";\r\n            } else if (\r\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n            ) {\r\n              errors.email = \"Invalid email address\";\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              alert(JSON.stringify(values, null));\r\n              setSubmitting(false);\r\n            }, 400);\r\n          }}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Form>\r\n              <Field type=\"email\" name=\"email\" />\r\n              <ErrorMessage name=\"email\" component=\"div\" />\r\n              <Field type=\"password\" name=\"password\" />\r\n              <ErrorMessage name=\"password\" component=\"div\" />\r\n              <button type=\"submit\" disabled={isSubmitting}>\r\n                Submit\r\n              </button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n//         <Form className = \"form-inside-input\" onSubmit = {this.onSubmit} noValidate>\r\n\r\n//         <Input name = \"username\" value = {this.state.username} onChange = {this.onTextChange} placeholder=\"Enter your username\" required/>\r\n\r\n//         <Input.Password name = \"password\" value={this.state.password}  onChange = {this.onTextChange} placeholder=\"Enter your password\" required />\r\n\r\n//         <Button type=\"primary\" onClick={this.onSubmit}>Submit</Button>\r\n\r\n//         </Form>\r\n"]},"metadata":{},"sourceType":"module"}