{"ast":null,"code":"export function getDataFromServer(apiPath, requestMethod, formBody) {\n  // function for service calls\n  let myHeaders = new Headers();\n  myHeaders.append('Content-Type', 'application/json');\n\n  if (!requestMethod && requestMethod !== \"POST\") {\n    return fetch(apiPath, {\n      method: 'GET',\n      headers: myHeaders\n    });\n  } else {\n    if (formBody) {\n      let fetchData = {\n        method: 'POST',\n        body: JSON.stringify(formBody),\n        headers: myHeaders\n      };\n      return fetch(apiPath, fetchData);\n    }\n  }\n}\nexport function getDataFromServerToPost(apiPath, requestMethod, formBody) {\n  let myHeaders = new Headers();\n  myHeaders.append('Content-Type', 'application/json');\n\n  if (formBody) {\n    let fetchData = {\n      method: 'POST',\n      body: formBody,\n      headers: myHeaders\n    };\n    return fetch(apiPath, fetchData);\n  }\n}\nexport function deleteTodoAPI(formBody) {\n  console.log(\"Form Body\" + JSON.stringify(formBody));\n  let myHeaders = new Headers();\n  myHeaders.append('Content-Type', 'application/json');\n  return fetch('', {\n    method: 'DELETE',\n    body: JSON.stringify(formBody),\n    headers: myHeaders\n  }).then(res => res.json());\n} // reference to service method in sagas","map":{"version":3,"sources":["C:/Users/juver/codingStuff/reactJS/redux-sample/src/redux/service/index.js"],"names":["getDataFromServer","apiPath","requestMethod","formBody","myHeaders","Headers","append","fetch","method","headers","fetchData","body","JSON","stringify","getDataFromServerToPost","deleteTodoAPI","console","log","then","res","json"],"mappings":"AAAA,OAAO,SAASA,iBAAT,CAA4BC,OAA5B,EAAqCC,aAArC,EAAoDC,QAApD,EAA8D;AACrE;AACI,MAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;;AAEA,MAAG,CAACJ,aAAD,IAAkBA,aAAa,KAAI,MAAtC,EAA8C;AAC1C,WAAOK,KAAK,CAACN,OAAD,EAAU;AAAEO,MAAAA,MAAM,EAAE,KAAV;AAAiBC,MAAAA,OAAO,EAAEL;AAA1B,KAAV,CAAZ;AACH,GAFD,MAGK;AACD,QAAGD,QAAH,EAAa;AACT,UAAIO,SAAS,GAAG;AACZF,QAAAA,MAAM,EAAE,MADI;AAEZG,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,QAAf,CAFM;AAGZM,QAAAA,OAAO,EAAEL;AAHG,OAAhB;AAKA,aAAOG,KAAK,CAACN,OAAD,EAAUS,SAAV,CAAZ;AACH;AACJ;AACJ;AAED,OAAO,SAASI,uBAAT,CAAiCb,OAAjC,EAA0CC,aAA1C,EAAyDC,QAAzD,EAAmE;AACtE,MAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;;AACA,MAAGH,QAAH,EAAa;AACT,QAAIO,SAAS,GAAG;AACZF,MAAAA,MAAM,EAAE,MADI;AAEZG,MAAAA,IAAI,EAAER,QAFM;AAGZM,MAAAA,OAAO,EAAEL;AAHG,KAAhB;AAKA,WAAOG,KAAK,CAACN,OAAD,EAAUS,SAAV,CAAZ;AACH;AACJ;AAED,OAAO,SAASK,aAAT,CAAuBZ,QAAvB,EAAiC;AACpCa,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAcL,IAAI,CAACC,SAAL,CAAeV,QAAf,CAA1B;AACA,MAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACA,SAAOC,KAAK,CAAC,EAAD,EAAK;AACbC,IAAAA,MAAM,EAAE,QADK;AAEbG,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,QAAf,CAFO;AAGbM,IAAAA,OAAO,EAAEL;AAHI,GAAL,CAAL,CAKFc,IALE,CAKGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALV,CAAP;AAMH,C,CACD","sourcesContent":["export function getDataFromServer( apiPath, requestMethod, formBody) {\r\n// function for service calls\r\n    let myHeaders = new Headers();\r\n    myHeaders.append('Content-Type', 'application/json');\r\n\r\n    if(!requestMethod && requestMethod!== \"POST\") {\r\n        return fetch(apiPath, { method: 'GET', headers: myHeaders })\r\n    }\r\n    else {\r\n        if(formBody) {\r\n            let fetchData = {\r\n                method: 'POST',\r\n                body: JSON.stringify(formBody),\r\n                headers: myHeaders\r\n            }\r\n            return fetch(apiPath, fetchData);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getDataFromServerToPost(apiPath, requestMethod, formBody) {\r\n    let myHeaders = new Headers();\r\n    myHeaders.append('Content-Type', 'application/json');\r\n    if(formBody) {\r\n        let fetchData = {\r\n            method: 'POST',\r\n            body: formBody,\r\n            headers: myHeaders\r\n        }\r\n        return fetch(apiPath, fetchData);\r\n    }\r\n}\r\n\r\nexport function deleteTodoAPI(formBody) {\r\n    console.log(\"Form Body\" + JSON.stringify(formBody))\r\n    let myHeaders = new Headers();\r\n    myHeaders.append('Content-Type', 'application/json');\r\n    return fetch('', {\r\n        method: 'DELETE',\r\n        body: JSON.stringify(formBody),\r\n        headers: myHeaders\r\n    })\r\n        .then(res => res.json())\r\n}\r\n// reference to service method in sagas\r\n"]},"metadata":{},"sourceType":"module"}