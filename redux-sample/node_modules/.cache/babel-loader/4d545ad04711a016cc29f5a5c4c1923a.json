{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\juver\\\\codingStuff\\\\reactJS\\\\redux-sample\\\\src\\\\App.js\";\n// import React from 'react';\n// // import logo from './logo.svg';\n// import { Form, Input, Button } from \"antd\";\n// // import { Tooltip, Select, Checkbox } from \"antd\";\n// // import Icon from '@ant-design/icons';\n// import './App.css';\n// class App extends React.Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       username: '',\n//       password: ''\n//     }\n//   }\n//   onTextChange = (e) => {\n//     const name = e.target.name;\n//     const value = e.target.value;\n//     this.setState((prevState, prevProps) => {\n//       return {[name] : value}\n//     })\n//   }\n//   onSubmit = e => {\n//     e.preventDefault();\n//     console.log(\"username : \"+this.state.username);\n//     console.log(\"password : \"+this.state.password);\n//   };\n//   render(){\n//     return (\n//       <div className=\"App\">\n//         <Form className = \"form-inside-input\" onSubmit = {this.onSubmit} noValidate>\n//         <Input name = \"username\" value = {this.state.username} onChange = {this.onTextChange} placeholder=\"Enter your username\" required/>\n//         <Input.Password name = \"password\" value={this.state.password}  onChange = {this.onTextChange} placeholder=\"Enter your password\" required />\n//         <Button type=\"primary\" onClick={this.onSubmit}>Submit</Button>\n//         </Form>\n//       </div>\n//     );\n//   }  \n// }\n// export default App;\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nApp = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Any place in your app!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 6\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      return errors;\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    children: ({\n      isSubmitting\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        type: \"email\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"email\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        type: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"password\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 6\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 56,\n  columnNumber: 4\n}, this);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/juver/codingStuff/reactJS/redux-sample/src/App.js"],"names":["React","Formik","Form","Field","ErrorMessage","App","email","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACC,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;;AAEAC,GAAG,GAAG,mBACJ;AAAA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,QAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,QAAQ,EAAE;AAAvB,KADjB;AAEE,IAAA,QAAQ,EAAEC,MAAM,IAAI;AAClB,YAAMC,MAAM,GAAG,EAAf;;AACA,UAAI,CAACD,MAAM,CAACF,KAAZ,EAAmB;AACjBG,QAAAA,MAAM,CAACH,KAAP,GAAe,UAAf;AACD,OAFD,MAEO,IACL,CAAC,2CAA2CI,IAA3C,CAAgDF,MAAM,CAACF,KAAvD,CADI,EAEL;AACAG,QAAAA,MAAM,CAACH,KAAP,GAAe,uBAAf;AACD;;AACD,aAAOG,MAAP;AACD,KAZH;AAaE,IAAA,QAAQ,EAAE,CAACD,MAAD,EAAS;AAAEG,MAAAA;AAAF,KAAT,KAA+B;AACvCC,MAAAA,UAAU,CAAC,MAAM;AACfC,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeP,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAG,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAHS,EAGP,GAHO,CAAV;AAID,KAlBH;AAAA,cAoBG,CAAC;AAAEK,MAAAA;AAAF,KAAD,kBACC,QAAC,IAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC,OAAnB;AAA2B,QAAA,SAAS,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC,UAAnB;AAA8B,QAAA,SAAS,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAEA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AArBJ;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAsCA,eAAeX,GAAf","sourcesContent":["// import React from 'react';\r\n// // import logo from './logo.svg';\r\n// import { Form, Input, Button } from \"antd\";\r\n// // import { Tooltip, Select, Checkbox } from \"antd\";\r\n// // import Icon from '@ant-design/icons';\r\n\r\n// import './App.css';\r\n\r\n// class App extends React.Component {\r\n//   constructor(props){\r\n//     super(props);\r\n//     this.state = {\r\n//       username: '',\r\n//       password: ''\r\n//     }\r\n//   }\r\n\r\n//   onTextChange = (e) => {\r\n//     const name = e.target.name;\r\n//     const value = e.target.value;\r\n//     this.setState((prevState, prevProps) => {\r\n//       return {[name] : value}\r\n//     })\r\n//   }\r\n\r\n//   onSubmit = e => {\r\n//     e.preventDefault();\r\n//     console.log(\"username : \"+this.state.username);\r\n//     console.log(\"password : \"+this.state.password);\r\n//   };\r\n\r\n//   render(){\r\n//     return (\r\n//       <div className=\"App\">\r\n//         <Form className = \"form-inside-input\" onSubmit = {this.onSubmit} noValidate>\r\n\r\n//         <Input name = \"username\" value = {this.state.username} onChange = {this.onTextChange} placeholder=\"Enter your username\" required/>\r\n        \r\n//         <Input.Password name = \"password\" value={this.state.password}  onChange = {this.onTextChange} placeholder=\"Enter your password\" required />\r\n        \r\n//         <Button type=\"primary\" onClick={this.onSubmit}>Submit</Button>\r\n        \r\n//         </Form>\r\n\r\n//       </div>\r\n//     );\r\n//   }  \r\n// }\r\n\r\n// export default App;\r\n\r\nimport React from 'react';\r\n import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n \r\n App = () => (\r\n   <div>\r\n     <h1>Any place in your app!</h1>\r\n     <Formik\r\n       initialValues={{ email: '', password: '' }}\r\n       validate={values => {\r\n         const errors = {};\r\n         if (!values.email) {\r\n           errors.email = 'Required';\r\n         } else if (\r\n           !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n         ) {\r\n           errors.email = 'Invalid email address';\r\n         }\r\n         return errors;\r\n       }}\r\n       onSubmit={(values, { setSubmitting }) => {\r\n         setTimeout(() => {\r\n           alert(JSON.stringify(values, null, 2));\r\n           setSubmitting(false);\r\n         }, 400);\r\n       }}\r\n     >\r\n       {({ isSubmitting }) => (\r\n         <Form>\r\n           <Field type=\"email\" name=\"email\" />\r\n           <ErrorMessage name=\"email\" component=\"div\" />\r\n           <Field type=\"password\" name=\"password\" />\r\n           <ErrorMessage name=\"password\" component=\"div\" />\r\n           <button type=\"submit\" disabled={isSubmitting}>\r\n             Submit\r\n           </button>\r\n         </Form>\r\n       )}\r\n     </Formik>\r\n   </div>\r\n );\r\n \r\n export default App;"]},"metadata":{},"sourceType":"module"}