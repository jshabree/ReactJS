{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\juver\\\\codingStuff\\\\reactJS\\\\redux-sample\\\\src\\\\App.js\";\nimport React from 'react'; // import { Formik, Form, Field, ErrorMessage } from \"formik\";\n\nimport \"./App.css\";\nimport logo from \"./logo.svg\";\nimport { Form, Input, Button } from \"antd\";\nimport { loginUser } from './redux/actions/index'; // import { Tooltip, Select, Checkbox } from \"antd\";\n// import Icon from '@ant-design/icons';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChange = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState((prevState, prevProps) => {\n        return {\n          [name]: value\n        };\n      });\n    };\n\n    this.isValid = () => {\n      const {\n        username,\n        password\n      } = this.state;\n\n      if (username.length === 0 || password.length === 0) {\n        this.state({\n          isValid: false,\n          errorMessage: \"Cannot leave fields empty\"\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        username,\n        password\n      } = this.state;\n\n      if (this.isValid()) {\n        this.props.dispatch(loginUser(username, password));\n      }\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  static getDerivedStateFromProps(newProps, prevState) {\n    if (newProps.result !== prevState.result) {\n      console.log(newProps.result);\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      username,\n      password,\n      errorMessage,\n      isValid\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter your username\",\n          name: \"username\",\n          value: this.state.username,\n          onChange: this.onTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Input.Password, {\n          placeholder: \"Enter your password\",\n          name: \"password\",\n          value: this.state.password,\n          onChange: this.onTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: this.onSubmit,\n          children: \" Submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    result: state.login.result\n  };\n};","map":{"version":3,"sources":["C:/Users/juver/codingStuff/reactJS/redux-sample/src/App.js"],"names":["React","Form","Input","Button","loginUser","App","Component","constructor","props","onTextChange","e","name","target","value","setState","prevState","prevProps","isValid","username","password","state","length","errorMessage","onSubmit","preventDefault","dispatch","getDerivedStateFromProps","newProps","result","console","log","render","mapStateToProps","login"],"mappings":"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","sourcesContent":["import React from 'react';\r\n// import { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport \"./App.css\";\r\nimport logo from './logo.svg';\r\nimport { Form, Input, Button } from \"antd\";\r\nimport {loginUser} from './redux/actions/index';\r\n// import { Tooltip, Select, Checkbox } from \"antd\";\r\n// import Icon from '@ant-design/icons';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  onTextChange = (e) => {\r\n      const name = e.target.name;\r\n      const value = e.target.value;\r\n      this.setState((prevState, prevProps) => {\r\n        return {[name] : value}\r\n      })\r\n  }\r\n\r\n\r\n  isValid = () => {\r\n    const {username, password} = this.state;\r\n    if(username.length === 0 || password.length === 0){\r\n      this.state({ isValid : false, errorMessage : \"Cannot leave fields empty\"});\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onSubmit = e => {\r\n      e.preventDefault();\r\n      const { username, password } = this.state;\r\n      if(this.isValid()) {\r\n        this.props.dispatch(loginUser(username, password));\r\n      }\r\n  };\r\n\r\n  static getDerivedStateFromProps(newProps, prevState) {\r\n    if(newProps.result !== prevState.result) {\r\n      console.log(newProps.result);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const { username, password, errorMessage, isValid } = this.state;\r\n\r\n    return (\r\n      <div className = \"App\">\r\n      <Form>\r\n      <Input\r\n        placeholder=\"Enter your username\"\r\n        name = \"username\" \r\n        value = {this.state.username} \r\n        onChange = {this.onTextChange}  />\r\n\r\n      <Input.Password\r\n        placeholder=\"Enter your password\"\r\n        name = \"password\" \r\n        value={this.state.password} \r\n        onChange = {this.onTextChange}  />\r\n\r\n\r\n      <Button type = \"primary\" onClick={this.onSubmit}> Submit </Button>\r\n\r\n      </Form>\r\n      \r\n      </div>\r\n\r\n\r\n    );\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps =  state => {\r\n  return {\r\n    result : state.login.result\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}